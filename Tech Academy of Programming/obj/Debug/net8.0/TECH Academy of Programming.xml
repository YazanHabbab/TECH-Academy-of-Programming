<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TECH Academy of Programming</name>
    </assembly>
    <members>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.register(TECH_Academy_of_Programming.Models.UserRegisterModel)">
             <summary>
             Registers new user
             </summary>
             <param name="user">Username should be 3 characters long at least and not exist, Email should be valid and not exist, Password should be 4 characters long at least</param>
             <remarks>
             Sample request:
            
                 POST /api/user/register
            
                 {
                    "firstName": "John",
                    "lastName": "Doe",
                    "Email": "John_Doe@gmail.com",
                    "Password": "john123",
                 }
             </remarks>
             <response code="200">If the user registeration was successful</response>
             <response code="400">If the username or email or password is not valid or the register failed</response>
        </member>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.login(TECH_Academy_of_Programming.Models.UserLoginModel)">
             <summary>
             Logs user in using his credentials and return new json web token for user authentication
             </summary>
             <param name="user"></param>
             <remarks>
             Sample request:
            
                 POST /api/user/login
            
                 {
                    "UserNameOrEmail": "John_Doe",
                    or "UserNameOrEmail": "John_Doe@gmail.com",
                    "Password": "john321"
                 }
             </remarks>
             <response code="200">If the login was successful</response>
             <response code="400">If the username or email or password is not valid</response>
             <response code="401">If the login failed</response>
        </member>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.getProfile(System.String)">
             <summary>
             Returns the user profile with specific Id
             </summary>
             <param name="ID"></param>
             <remarks>
             Sample request:
            
                 GET /api/user/getProfile?Id=ebf825e3-d70e-48da-abd4-9570dfc08a66
            
             </remarks>
             <response code="200">If the request is successful</response>
             <response code="400">If the ModelState is not valid or the operation failed</response>
             <response code="401">If the user is not authenticated</response>
             <response code="404">If the user is not found</response>
        </member>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.updateUser(System.String,TECH_Academy_of_Programming.Models.UpdatedUserModel)">
             <summary>
             Updates the user profile with specific Id
             </summary>
             <param name="ID"></param>
             <param name="user">New Username and new Email should not exist new password should be 4 characters long at least</param>
             <remarks>
             Sample request:
            
                 PUT /api/user/updateUser?Id=ebf825e3-d70e-48da-abd4-9570dfc08a66
            
                 {
                    "firstName": "John",
                    "lastName": "Doe",
                    "Email": "John_Doe@gmail.com",
                    "oldPassword": "john123",
                    "newPassword": "doe321"
                 }
             </remarks>
             <response code="200">If the request is successful</response>
             <response code="400">If the ModelState is not valid or the operation failed</response>
             <response code="401">If the user is not authenticated</response>
        </member>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.deleteUser(System.String)">
             <summary>
             Deletes user using user Id
             </summary>
             <param name="ID"></param>
             <remarks>
             Sample request:
            
                 Delete /api/user/DeleteUser?Id=ebf825e3-d70e-48da-abd4-9570dfc08a66
             </remarks>
             <response code="200">If the delete is successful</response>
             <response code="400">If the user did not delete</response>
             <response code="401">If the user is not authenticated</response>
        </member>
        <member name="M:TECH_Academy_of_Programming.Controllers.UserController.getUsers(System.Int32,System.Int32)">
             <summary>
             Gets all the users (only for admin use)
             </summary>
             <param name="size">Default is 5</param>
             <param name="page">Default is 1</param>
             <returns>A list of users with pagination(size is the number of users to be returned by page)</returns>
             <remarks>
             Sample request:
            
                 GET /api/user/getUsers?size=10&amp;page=1 
             </remarks>
             <response code="200">If the request is successful</response>
             <response code="400">If the ModelState is not valid</response>
             <response code="401">If the user is not authenticated</response>
             <response code="403">If the user is not authorized</response>
             <response code="404">If no users were found</response>
        </member>
        <member name="T:TECH_Academy_of_Programming.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:TECH_Academy_of_Programming.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TECH_Academy_of_Programming.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TECH_Academy_of_Programming.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
